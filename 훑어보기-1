# 보편 언어(Ubiquitous Language)

### 의미
* 코드상에 나타나지 않는 설계 측면을 전달하는 역할을 한다.(즉, 설계의 근간이 되는 언어다)
  * 제한된 컨텍스트(Bounded Context)
    * 서로 다른 시스템과 모델간의 관계 정의
  * 패턴
    * 모델과 설계에 적용할 수 있다.
    
* 모델 도출 방법에 근간이다.
  * 모델 도출 방법
    * 시스템에 관해 이야기를 주고 받을 때 모델을 사용하라. 
    * 모델의 요소와 상호작용을 이용한다. 
    * 그리고 표현 해야할 것을 더 쉽게 말하는 방법을 찾는다.
    * 발견된 새로운 아이디어를 다이어그램과 코드에 적용하라.  
  * 모델은 다이어그램이 아니다.(!)
  * 다디어그램의 목적은 모델을 전달하고 설명하는데 있다.
  * 코드는 설계의 세부사항에 대한 저장소 역할이다. (잘 작성된 자바 코드는 UML만큼 표현력이 있다.)
  * 취사선택해서 만든 다이어그램은 모델이나 설계읙 각 요소를 참조하는데 도움될 수 있다.
  
* 요구사항을 재구성하는 언어다.
  * 요구사항 수집 방법
    * 요구사항과 그것을 이행하는 설계와 독립적이어야한다고 착각한다.
    * 하지만, 이는 모든 언어가 어떤 모델에 기반을 두고 있다는 것을 간과한 것이다.
    * 애자일 프로세스는 애플리케이션을 충분히 구체화할 지식을 초반에 갖출 수 있는 경우가 없으므로,
    * 즉, 보편 언어(Ubiquitous Language)는 요구사항을 재구성하는 일이 발전과정의 일부여야한다.

### 문제
* 프로젝트 언어가 분열되면 안된다.
* 도메인 전문가와 설계하는 개발자의 언어가 다르면, 코드에나 문서에 담기지 않는 결과가 나타난다.

### 해결
* 즉, 모델을 언어의 근간으로 사용한다.
* 대화할 때 동일한 언어를 사용하라.
* '보편 언어(Ubiquitous Language)의 변화' == '모델의 변화'
* 개발자는 설계를 어렵게 만드는 모호함과 불일치를 찾아야한다.

* 모델 도출 방법
  * 시스템에 관해 이야기를 주고 받을 때 모델을 사용하라. 
  * 모델의 요소와 상호작용을 이용한다. 
  * 그리고 표현 해야할 것을 더 쉽게 말하는 방법을 찾는다.
  * 발견된 새로운 아이디어를 다이어그램과 코드에 적용하라.
  
* 요구사항 수집 방법
  * 요구사항과 그것을 이행하는 설계와 독립적이어야한다고 착각한다.
  * 하지만, 이는 모든 언어가 어떤 모델에 기반을 두고 있다는 것을 간과한 것이다.
  * 애자일 프로세스는 애플리케이션을 충분히 구체화할 지식을 초반에 갖출 수 있는 경우가 없으므로,
  * 즉, 보편 언어(Ubiquitous Language)는 요구사항을 재구성하는 일이 발전과정의 일부여야한다.

### 예시
* "Routing Service에 출발지, 목적지, 도착 시각을 전달하면 화물이 멈춰야할 지점을 찾고, 음 그것을 데이터베이스에 삽입한다." (모호하고 기술적이다.)
* "출발지, 목적지, 등등 이것들 모두 Routing Service에 넣으면 필요한 것이 모두 담긴 Itinerary(여행일정) 돌려받는다." (아직, 설명이 장황하다.)
* "Routing Service는 Route Specification(출발지, 목적지, 도착시간 등)을 만족하는 Itinerary(여행일정)를 찾는다." (간결하고, 명확하다.)

# 글로 쓴 설계 문서

### 의미
* 문서는 '코드'와 '말'을 보완하는 역할을 해야한다.
* 문서는 코드가 이미 잘하고 있는 것을 하려고 해서는 안 된다.
* 익스트림 프로그래밍은 여분의 설계 문서를 전혀 사용하지 않고 코드 스스로 별도의 설명이 필요 없는 상태를 유지해야한다.


###### 도메인은 무엇인가요?
* 사용자 활동에 도움되는 소프트웨어를 만들기 위해서, 개발팀은 사용자의 활동과 관련된 지식체계에 집중해야한다. 이런 지식의 체계(영역)가 도메인이다.

###### 모델은 무엇인가요?
* 도메인 지식의 폭은 광범위하고 위압적이다. 개발팀은 이런 부담을 해소하기 위해서 모델을 활용한다. 
* 모델은 지식을 선택적으로 단순화하고 의식적으로 구조화한 형태다. 우리는 적절한 모델을 토대로 정보를 이해하고 문제 자체에 집중할수 있다.

###### 도메인 모델링은 무엇인가요?
* 모델링은 현실 세계에 실체를 사실적으로 만드는 것이 아니다. 현실 세계에 실재하는 사물(or 실체가 없는 사물)을 인위적으로 창조하는 행위다.
* (!)모델링은 필요한 결과를 내는 소프트웨어 매커니즘을 만드는 것이 아니라, 어떤 목적에 따라 제약에 구애받지 않고 현실을 표현하는 영화 제작같은 것이다.



